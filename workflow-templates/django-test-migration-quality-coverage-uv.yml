name: Run Pytest with Coverage, Check the Django Migration and run the Sonar Analysis

on:
  push:
    branches:
      - dev
      - hotfix**
  pull_request:
    branches-ignore:
      - main

jobs:
  pytest-with-coverage:
    uses: repowerednl/.github/.github/workflows/python-test-coverage-uv.yml@add-uv-workflows
    permissions:
      pull-requests: write
      contents: write
      actions: read
    strategy:
      matrix:
        # Make sure that the configured python versions are available here.
        # These versions are cached on the runner; otherwise setting up python is too slow for the CI
        # https://github.com/actions/runner-images/blob/main/images/ubuntu/toolsets/toolset-2004.json#L4
        uv_version: [ "1.8.4" ]
    with:
      postgres_db: ${{ vars.POSTGRES_DB }}
      postgres_user: ${{ vars.POSTGRES_USER }}
      postgres_host: ${{ vars.POSTGRES_HOST }}
      uv_version: ${{ matrix.uv_version }}
      # The poetry cached installation is in '/home/runner/.local/' and the './.venv' is for the poetry packages
      # when configuring a working directory, make sure the cached paths are also up-to-date
      # test_groups: "[1, 2]" #Optional, defaults to "[1,2,3,4,5,6,7,8]"
      # working_directory: # Optional, defaults to '.'
    secrets:
      postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
      private_pypi_user: ${{ secrets.PRIVATE_PYPI_USER }}
      private_pypi_password: ${{ secrets.PRIVATE_PYPI_PASSWORD }}

  django-migration-test:
    uses: repowerednl/.github/.github/workflows/django-migration-test-uv.yml@add-uv-workflows
    strategy:
      matrix:
        # Make sure that the configured python versions are available here.
        # These versions are cached on the runner; otherwise setting up python is too slow for the CI
        # https://github.com/actions/runner-images/blob/main/images/ubuntu/toolsets/toolset-2004.json#L4
        uv_version: [ "1.8.4" ]
    with:
      postgres_db: ${{ vars.POSTGRES_DB }}
      postgres_user: ${{ vars.POSTGRES_USER }}
      postgres_host: ${{ vars.POSTGRES_HOST }}
      uv_version: ${{ matrix.uv_version }}
      # working_directory: # Optional, defaults to '.'
      # django_settings_environment: # Optional, defaults to TEST
    secrets:
      postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
      private_pypi_user: ${{ secrets.PRIVATE_PYPI_USER }}
      private_pypi_password: ${{ secrets.PRIVATE_PYPI_PASSWORD }}

  sonar-cloud:
    needs: pytest-with-coverage
    uses: repowerednl/.github/.github/workflows/quality-control-sonar.yml@main
    # with:
      # coverage_report_name: # Optional, defaults to 'coverage.xml'
    secrets:
      sonar_token: inherit

