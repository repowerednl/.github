name: Pytest with Coverage, Report and Job summary

on:
  workflow_call:
    inputs:
      # Required
      postgres_db:
        type: string
        required: true
      postgres_user:
        type: string
        required: true
      postgres_host:
        type: string
        required: true
      file_paths_to_cache:
        type: string
        required: true
      # Provided by caller workflow
      python_version:
        type: string
        required: true
      poetry_version:
        type: string
        required: true
      # Optional
      working_directory:
        type: string
        description: Whenever the app (i.e. manage.py) is not in the root; the location can be specified here
        default: .
      # @Deprecated: the package xdist is no longer used in this workflow
      num_test_processes:
        type: number
        description: The number of parallel test processes
        default: 2
    secrets:
      postgres_password:
        required: true
      private_pypi_url:
        required: true
      private_pypi_user:
        required: true
      private_pypi_password:
        required: true

jobs:
  pytest-with-coverage:
    name: Pytest With Postgres and Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Make sure to change the '--splits' parameter when this group is changed
        group: [1, 2, 3, 4]

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: ${{ inputs.postgres_db }}
          POSTGRES_USER: ${{ inputs.postgres_user }}
          POSTGRES_PASSWORD: ${{ secrets.postgres_password }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: (Cached) Python and Poetry
        uses: repowerednl/.github/composite-actions/python-poetry-cache@main
        with:
          python_version: ${{ inputs.python_version }}
          poetry_version: ${{ inputs.poetry_version }}
          working_directory: ${{ inputs.working_directory }}
          file_paths_to_cache: ${{ inputs.file_paths_to_cache }}
          private_pypi_url: ${{ secrets.private_pypi_url }}
          private_pypi_user: ${{ secrets.private_pypi_user }}
          private_pypi_password: ${{ secrets.private_pypi_password }}

      - name: Download test durations
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.head_ref || github.ref_name }}/.test_durations

      - name: Run tests with coverage parallel test procs)
        working-directory: ${{ inputs.working_directory }}
        run: |
          poetry run pytest -v --cov --splits 4 --group ${{ matrix.group }} --store-durations
          ls -alh
          pwd
        env:
          pytest_github_report: true
          pytest_use_blanks: true
          CI: true
          POSTGRES_DB: ${{ inputs.postgres_db }}
          POSTGRES_USER: ${{ inputs.postgres_user }}
          POSTGRES_HOST: ${{ inputs.postgres_host }}
          POSTGRES_PASSWORD: ${{ secrets.postgres_password }}
          POSTGRES_PORT: 5432

      - name: Upload partial coverage and test durations
        working-directory: ${{ inputs.working_directory }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.head_ref || github.ref_name }}/group${{ matrix.group }}
          path: |
            .coverage
            .test_durations
          if-no-files-found: 'error'
          include-hidden-files: true

  coverage:
    needs: pytest-with-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: (Cached) Python and Poetry
        uses: repowerednl/.github/composite-actions/python-poetry-cache@main
        with:
          python_version: ${{ inputs.python_version }}
          poetry_version: ${{ inputs.poetry_version }}
          working_directory: ${{ inputs.working_directory }}
          file_paths_to_cache: ${{ inputs.file_paths_to_cache }}
          private_pypi_url: ${{ secrets.private_pypi_url }}
          private_pypi_user: ${{ secrets.private_pypi_user }}
          private_pypi_password: ${{ secrets.private_pypi_password }}

      - name: Download all artifacts from branch
        # Download coverage1, coverage2, etc. of the current branch
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.head_ref || github.ref_name }}

      - name: temp run
        run: |
          ls -alh
          pwd

#      - name: Combine test durations
#        uses: repowerednl/.github/composite-actions/combine_durations@combine-durations
#        with:
#          durations_path: ${{ github.head_ref || github.ref_name }}/group*/.test_durations

#      - name: Combine coverage and create report
#        run: |
#          coverage combine ${{ github.head_ref || github.ref_name }}-coverage*
#          coverage report
#          coverage xml
#
#      - name: Coverage comment
#        id: coverage-comment
#        uses: py-cov-action/python-coverage-comment-action@v3
#        with:
#          GITHUB_TOKEN: ${{ github.token }}
#          COVERAGE_PATH: ${{ inputs.working_directory }}
#          MINIMUM_ORANGE: 80
#
#      - name: Upload 'coverage.xml' report and combined test_durations
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ github.head_ref || github.ref_name }}
#          path: |
#            coverage.xml
#            .test_durations
#          if-no-files-found: 'error'
