name: Pytest with Coverage
# This is a basic pytest implementation without a postgres service and without parallelization

on:
  workflow_call:
    inputs:
      file_paths_to_cache:
        type: string
        required: true
      # Provided by caller workflow
      python_version:
        type: string
        required: true
      poetry_version:
        type: string
        required: true
      poetry_no_root:
        type: boolean
        description: Whenever the poetry install should be run with the --no-root flag
        default: true
      # Optional
      working_directory:
        type: string
        description: Whenever the app (i.e. manage.py) is not in the root, the location can be specified here
        default: .
    secrets:
      private_pypi_url:
        required: true
      private_pypi_user:
        required: true
      private_pypi_password:
        required: true

jobs:
  pytest-with-coverage:
    name: Pytest With Postgres and Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: (Cached) Python and Poetry
        uses: repowerednl/.github/composite-actions/python-poetry-cache@main
        with:
          python_version: ${{ inputs.python_version }}
          poetry_version: ${{ inputs.poetry_version }}
          poetry_no_root: ${{ inputs.poetry_no_root }}
          working_directory: ${{ inputs.working_directory }}
          file_paths_to_cache: ${{ inputs.file_paths_to_cache }}
          private_pypi_url: ${{ secrets.private_pypi_url }}
          private_pypi_user: ${{ secrets.private_pypi_user }}
          private_pypi_password: ${{ secrets.private_pypi_password }}

      - name: Run tests with coverage
        working-directory: ${{ inputs.working_directory }}
        run: |
          poetry run coverage run -m pytest -v
        env:
          pytest_github_report: true
          pytest_use_blanks: true
          CI: true

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          path: ${{ inputs.working_directory }}/.coverage
          if-no-files-found: 'error'
          include-hidden-files: true
          overwrite: true

      - name: Coverage reports
        working-directory: ${{ inputs.working_directory }}
        run: |
          poetry run coverage report
          poetry run coverage xml

      - name: Coverage comment
        id: coverage-comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          COVERAGE_PATH: ${{ inputs.working_directory }}
          MINIMUM_ORANGE: 80
