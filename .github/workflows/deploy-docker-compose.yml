name: Deploy docker-compose via SSH

on:
  workflow_call:
    inputs:
      # Required
      environment:
        type: string
        required: true
      tag:
        type: string
        required: true
      # TODO: https://repowerednl.atlassian.net/browse/REP-3273
      frontend_tag:
        type: string
        required: true
      # Optional
      docker-compose_remote_dir:
        type: string
        required: false
        default: .
      server_username:
        type: string
        required: false
        default: root
      docker-compose_file_path:
        type: string
        required: false
        default: docker-compose.yml

jobs:
  scp-docker-compose:
    name: Secure copy docker-compose to server
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Copy docker-compose file via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.HOST }}
          username: ${{ inputs.server_username }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ inputs.docker-compose_file_path }}
          target: ${{ inputs.docker-compose_remote_dir }}

  deploy-docker-compose:
    name: Deploy docker-compose via SSH
    needs: [ scp-docker-compose ]
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: SSH deployment with docker-compose
        uses: appleboy/ssh-action@v1.0.3
        env:
          TAG: ${{ inputs.tag }}
          FRONTEND_TAG: ${{ inputs.frontend_tag }}
          HOST: ${{ vars.HOST }}
          EXTRA_DOMAIN: ${{ vars.EXTRA_REROUTE_DOMAIN }}
        with:
          host: ${{ vars.HOST }}
          username: ${{ inputs.server_username }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: TAG,HOST,EXTRA_DOMAIN
          script: |
            docker system prune --all --force
            DOCKER_COMPOSE_PATH=${{ inputs.docker-compose_remote_dir }}/${{ inputs.docker-compose_file_path }}
            docker-compose -f $DOCKER_COMPOSE_PATH pull 
            docker-compose -f $DOCKER_COMPOSE_PATH up -d --force-recreate

  deploy-summary:
    name: Deployment outcome
    needs: [ deploy-docker-compose ]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Summary
      run: |
        if ${{ contains(needs.deploy-docker-compose.result, 'success') }}; then
          echo "<h2>:white_check_mark: Deployment successful </h2>" >> $GITHUB_STEP_SUMMARY
        else
          echo "<h2>:x: Deployment failed </h2>" >> $GITHUB_STEP_SUMMARY
        fi
        {
          echo ""
          echo "Branch: $BRANCH"
          echo "Tag: ${{ inputs.tag }}"
          echo "Frontend tag: ${{ inputs.frontend_tag }}"
          echo "Environment: ${{ inputs.environment }}"
          echo "By: ${{ github.actor }}"
        } >> $GITHUB_STEP_SUMMARY
      env:
        BRANCH: ${{ github.event.workflow_run.head_branch || github.ref_name }}
