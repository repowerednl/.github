name: Determine GitHub environment
# Since reusable workflows cannot handle environments they need to be retrieved separately:
# https://docs.github.com/en/enterprise-cloud@latest/actions/sharing-automations/reusing-workflows#limitations

on:
  workflow_call:
    outputs:
      environment:
        description: "The GitHub's environment"
        value: ${{ jobs.determine-environment.outputs.env_name }}

jobs:
  determine-environment:
    name: Determine the GitHub environment
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.retrieve-environment.outputs.env_name }}
    steps:
      - name: Retrieve environment
        id: retrieve-environment
        #TODO(REP-2853): temporarily also qa environment until the rollback workflow is in place
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "main" ]]; then
            echo "Latest release merge to main event. Deploying to production"
            echo "env_name=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.head_branch }}" == "dev" ]]; then
            # Check if a PR exists from dev to main
            pr_response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                                 -H "Accept: application/vnd.github+json" \
                                 "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&base=main&head=${{ github.repository_owner }}:dev")
            echo "PR resonspone: $pr_response"
            if [[ "$pr_response" == *"\"id\":"* ]]; then
              echo "A release PR has been opened from dev to main. Deploying to qa"
              echo "env_name=qa" >> $GITHUB_OUTPUT
            else
              echo "A request to deploy the dev branch has been made. Deploying to dev"
              echo "env_name=dev" >> $GITHUB_OUTPUT
            fi
          else
            echo "A request to deploy a feature branch has been made. Deploying to dev"
            echo "env_name=dev" >> $GITHUB_OUTPUT
          fi