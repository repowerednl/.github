#TODO(REP-2945): Move migration Job to infra
name: Run Kubernetes migration Job

on:
  workflow_call:
    inputs:
      # Required
      tag:
        type: string
        required: true
      environment:
        type: string
        required: true
    secrets:
      digital_ocean_access_token:
        required: true
      infisical_client_id:
        required: false
      infisical_client_client_secret:
        required: false
      infisical_client_project_id:
        required: false

jobs:
  migraties:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Install envsubst
        run: sudo apt-get update && sudo apt-get -y install gettext-base

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        env:
          expiry-seconds: ${{ vars.KUBE_CRED_EXPIRY_SECOND || 300 }}
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds ${{ env.expiry-seconds }} ${{ vars.CLUSTER_NAME }}

      - uses: actions/checkout@v4

      - name: Update kubernetes secrets
        run: |
          kubectl delete secret infisical-secrets --ignore-not-found=true
          if ! kubectl get secret infisical-secrets > /dev/null 2>&1; then
            echo "Secret not found. Creating it now..."
            kubectl create secret generic infisical-secrets \
              --from-literal=INFISICAL_CLIENT_ID=${{ secrets.infisical_client_id }} \
              --from-literal=INFISICAL_CLIENT_SECRET=${{ secrets.infisical_client_client_secret }} \
              --from-literal=INFISICAL_PROJECT_ID=${{ secrets.infisical_client_project_id }}
            echo "Secret created successfully."
          else
            echo "Secret already exists. It was created in another job"
          fi

      - name: Run migrations job
        run: cat migrations_job.yml | envsubst | kubectl apply -f -
        env:
          VERSION: ${{ inputs.tag }}

      - name: Verify migrations are successful
        env:
          timeout-seconds: ${{ vars.MIGRATION_TIMEOUT_SECONDS || 300 }}
        run: kubectl wait --for=condition=complete --timeout=${{ env.timeout-seconds }}s job/django-migrations-${{inputs.tag}}